%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.3 (Build 16D32) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 772 462
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 772 462
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: TUGGEF+Avenir-Book
%!FontType1-1.0: TUGGEF+Avenir-Book 1.0000.1.0010
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /TUGGEF+Avenir-Book def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /h put
dup 35 /o put
dup 36 /c put
dup 37 /l put
dup 38 /a put
dup 39 /t put
dup 40 /U put
dup 41 /X put
dup 42 /D put
dup 43 /i put
dup 44 /s put
dup 45 /e put
dup 46 /ntilde put
dup 47 /space put
dup 48 /I put
dup 49 /n put
dup 50 /v put
dup 51 /g put
dup 52 /oacute put
dup 53 /d put
dup 54 /r put
dup 55 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -167 1 index div -288 2 index div 1000 3 index div 940 5 -1 roll div]cvx def
/sfnts [<

















00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/space 1 def
/C 2 def
/D 3 def
/I 4 def
/U 5 def
/X 6 def
/a 7 def
/acute 8 def
/c 9 def
/d 10 def
/e 11 def
/g 12 def
/h 13 def
/i 14 def
/l 15 def
/n 16 def
/ntilde 17 def
/o 18 def
/oacute 19 def
/p 20 def
/r 21 def
/s 22 def
/t 23 def
/tilde 24 def
/v 25 def
/AE 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-167 -288 1000 940}def
/UniqueID 4189041 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55432D4F3B2AF89AB3F665ECA680A77D81DB10FAAF8B4891F95E296E1C384CA3B7D8D9C41083DA6650A848F2EE5263FED8A148E85541E58BE5367ED499760A0EA0ACFE59572C199E15BAE01035E9DB131E1FA21084BC2E3512E3928CAF84235253A0CD699A3814E571F5D027AB0B124658BEB216AED9E1AB494703BD1F6CD11294B397B2D21723D50812C374395CEAF42A5AFD85660321870651903E6412C9E8CB1A4D38E48AF746543AB37B5468ED3686DD08A0630CD356F8D2756554CBE6C0F53F8F7D7F2AC5ABBACCE003376B5C157679C8376051A6C19E42ED1AA4484E9D8338AD75066AAE0C0B3A1214EA72C928261FF31219113301C80F1DAC618616B233D537277721A1BCD64DA0380706EDFA9DA8E96A94DDA2B3A3688D9C4B46D7D2967BE44D13D4B36CECABB7063C66B63783F0D1CCE0CDA62041DECEA93FFDD65DB2D41A2D4A40E50165C87036A3FF05CC14C87103B63DA644FFF9E771612E2C75A925E9C570ED8B6E8C26B5F826958FC09F158095BCD443EF6C0D29FD63545E73ACD85C70E46169C6E91825BFB2A96B7224A6AE8B4CE1F7F612EAB0AFBDF22B382A401FC0DC9B0A7A72B10B201BACDF845A5414DAAADFA84AD0B6EAEFEE3860AA58181CAEB2BA254D28DFF7388B58016FD832629FF385A94D6F36D181C3F696D4E425335011CD29CA5A6E5C2C5FF2AE63BEB9DFB11323266515BC3F14B5353EE0E5082C0A765E84220222848D37DFC44C415BFAAB87DD5E7BDDBFCC2C75435BE55567D82C4FE630A9950B2DA6D15F03512970C1A4200B2286772CF4E9AAAD0A72FFA64E3


E89BEA2313804CBC4DA0BB5C14D5935375D5A1916AF29534701F2AAA23B317DDA3AD010404A3552553EA86272902E89A851F2D070614EE0B89F5F82D35BECFB6E13628D690D199A84854DDD4ED10EF564982E906332B9C948C88AD2A53F3F91993984E4BA88B9805682D130556B9AB7644381D305935405C562A3D3C797858DCAEBE9F56EF3322EFD6323D9F321DFB064C1A224EC8A4A3C7728C90F15669AD694CDFE32D52FF4BD2F2D3C24C5AD63A8F9634AB62F51F7F3CE2449F6EB1C09625365D50CF6840C980D375365226E6F91F11CC574F51B08291D4628B45A5ABB37479975583EFDFD295FEFE7591525C5E9B54FAE936ADAF4546CF01BEAEEC3BA9141FFC0AB6A7FCBE38546AE1839AA0BD328FD157D77F2117C97FC73E080F2031D0E4F0BA67CA4F5A555E1CB9EC6ED07FE707D5CDD59FB327E148B55CB23DF425D1CAA721FEBD9D1711AD66C93F79CFA9AAF3D7FA7FABAAA435382A36854E4EDB3B57EC0AEA4CA50B316573C44FBFA193479DE1D30DFB7DD549EBF5DD8D42AF7F89869266DE9BE7FED576FCF938D21AE060A8371DD3B5E8F3C42820E121B1B631956B34347E78E86A2485E0ED6253774C6D2803A1E96DFFA580043D57708E40727B16408EC731F1029C4A8FBC9D1640F51EC809C6F2D2675D9B55CA36448F4ADCB2E7C7A552C09045F9A1C86D6289075C046BE6F1694BCAD899478D6CFA27F84375D401800357E4DE7EAABB5204B95661C62F8584B0B247634422030A07468A89E7C471C20DC167B17E1E6399D770E8D7C45B9FFA9524834297E55B255422DB8FAD59D0884EFD8E4FAA6C1226A23D709AF13E6490AE35B3768649FB855E91EE25DD937BFBAC4F86E85B9DE90EE9D75EC9003DF8C537B9DE27A4A7EB308009BB7D8D15A47F7211ABB7FC26C82D82B5A8E4086043013D0C8F0F0815F9A9A8724B28F8CC69A46216A9035AE32D7DAEA76C95635BA159C936877858C2D301AAE89404E623C12E7571AA314C0ADC1478BFE279B25C6B6EE671CDE8F9B8348448662A69E195CBFA9B236FB425FB101D9C61ECD96F3D55BC3690025CE50ABED488E85DF8668E8EAB8F98BAE14C409ABA19255295672A240F9ED78001172E67D2860A05C26961D047943BC052333AE43170E21E669CD966A89E0B7EE824531359E25CDA7EB35DC677EF4E9E9E568254DAB876C488B6DDC4953366900E306B71D3C794700750C2BF3D80441AC20C866AC0EE65F1971CC78101CC15CE8225F1D9FFC29C043776236DD3CDA865287E1F03F6FA0D35CED5665CD706A61B0B3E0E66BFA15BAF592684FD837DB8717BCCDC3ADBDD59666AA574292253E3DA9F44CA3B9AD47F2246F6B3389D418B8462F1036A47E778C7C73E4C736FF138D9565209CFE18DDD663C13DAC7AAAB3464BBF15FB7ABDDA789E28F1C6046E176751FC5FCFC5D6DBBDBAF52

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TUGGEF+Avenir-Book cguidfix
/F1.1/TUGGEF+Avenir-Book renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.64705884 0.54509807 0.37254903 sc
q
560.95825 379.96942 m
561.53381 382.67584 551.75958 384.36859 551.1344 381.40878 c
550.03296 376.17847 547.9491 371.59683 545.33936 367.37 c
532.68738 398.41751 503.37457 424.89355 472.38477 439.90543 c
405.60236 472.27066 312.71228 469.97986 250.28612 427.05258 c
250.12735 426.99176 249.90904 426.9715 249.79988 426.88028 c
246.16803 424.40701 242.68503 421.72089 239.39056 418.89285 c
239.25163 418.78134 239.1028 418.69012 238.97379 418.57864 c
238.94402 418.55835 238.96387 418.51782 238.94402 418.49753 c
218.86961 401.06308 207.14052 377.57727 228.76292 354.26376 c
243.11172 338.82617 263.99982 329.59198 285.76117 323.51019 c
285.16577 291.56055 293.43173 258.46552 304.65472 230.86435 c
243.57811 249.42393 185.9944 303.83563 212.87605 373.28961 c
213.7493 375.56015 204.2529 378.01312 203.09189 375.00266 c
171.84407 294.29736 250.02812 239.88567 317.18759 223.22157 c
390.25131 205.09785 485.8107 220.50505 533.82855 284.65775 c
552.0672 309.03555 555.20288 333.98102 548.8819 356.94989 c
554.72656 363.46753 559.10266 371.0495 560.95825 379.96942 c
560.95825 379.96942 l
h
248.45872 345.84293 m
216.43196 366.19293 224.86528 395.04669 247.80391 415.67102 c
247.8932 415.72183 248.02217 415.73196 248.08171 415.79294 c
312.38327 468.79645 413.81131 468.94885 483.86737 428.13705 c
512.18347 411.64777 531.76862 386.09592 538.09857 357.95337 c
527.88928 347.50912 513.56256 340.4989 500.58517 334.95166 c
460.33347 317.76132 413.73193 314.26636 370.65256 314.86578 c
360.67148 315.00803 350.48203 315.58713 340.26285 316.66406 c
340.26285 344.7355 346.88052 371.81131 365.36435 392.52707 c
367.2197 394.60983 360.50281 394.07135 359.13364 392.53723 c
340.84821 372.03482 333.96265 345.30444 333.59555 317.51749 c
319.62601 319.3056 305.68625 322.02841 292.22269 326.13297 c
292.93704 355.26102 301.09256 383.28168 321.6004 404.91183 c
323.04895 406.44595 316.6694 405.65347 315.53833 404.44449 c
295.62579 383.43408 287.10318 356.51068 285.72406 328.3783 c
272.62762 332.85873 260.00742 338.48724 248.45872 345.84293 c
248.45872 345.84293 l
h
312.8912 228.02626 m
312.77292 228.0567 312.63492 228.10747 312.49692 228.13792 c
312.58563 228.29019 312.64478 228.45261 312.58563 228.59473 c
301.14136 255.85088 292.27969 289.15717 292.19098 321.4585 c
306.33612 317.90555 320.52072 315.59106 333.414 313.78415 c
333.67029 281.50311 342.36438 248.12576 352.31033 221.63095 c
338.58905 222.75775 325.28177 224.93011 312.8912 228.02626 c
312.8912 228.02626 l
h
520.99023 283.00339 m
484.98846 234.98921 418.95218 218.72455 359.43909 222.04634 c
359.74689 222.41093 359.93552 222.79578 359.78659 223.19075 c
349.83795 249.12712 340.96164 281.81848 340.28647 313.53763 c
389.52328 307.35989 441.45078 311.67416 489.10892 325.31583 c
505.21341 329.92383 524.97168 337.17508 539.85492 348.86212 c
542.3371 327.05774 536.8465 304.16974 520.99023 283.00339 c
520.99023 283.00339 l
h
W*
0 0 772 462 rc
191 467 m
565.98273 467 l
565.98273 211.15022 l
191 211.15022 l
h
f
Q
0.2 w
0.38039216 0.23529412 0.18039216 sc
q
0 0 772 462 rc
1 0 0 -1 196 462 cm
364.95828 82.030563 m
365.53381 79.324173 355.75958 77.631409 355.1344 80.591209 c
354.03296 85.821541 351.9491 90.403152 349.33932 94.629997 c
336.68738 63.582485 307.37457 37.106449 276.38477 22.09458 c
209.60236 -10.270651 116.71229 -7.979845 54.286114 34.947418 c
54.127346 35.008236 53.909039 35.028507 53.799885 35.119736 c
50.168034 37.592995 46.685028 40.279114 43.39056 43.107143 c
43.251637 43.218643 43.102791 43.309872 42.973789 43.421371 c
42.944023 43.441643 42.963867 43.482189 42.944023 43.50246 c
22.869606 60.936909 11.140512 84.422737 32.762928 107.73624 c
47.111721 123.17384 67.999825 132.40802 89.761169 138.48979 c
89.165787 170.43944 97.431717 203.53448 108.65473 231.13565 c
47.578106 212.57607 -10.005596 158.16437 16.876059 88.710388 c
17.74929 86.439857 8.2528925 83.98687 7.0918908 86.997353 c
-24.155926 167.70264 54.028114 222.11433 121.1876 238.77843 c
194.25133 256.90213 289.8107 241.49495 337.82855 177.34227 c
356.06717 152.96445 359.20288 128.019 352.88187 105.05012 c
358.72656 98.532471 363.10266 90.950516 364.95828 82.030563 c
364.95828 82.030563 l
h
52.458725 116.15707 m
20.431959 95.807053 28.865278 66.953308 51.803905 46.328979 c
51.893196 46.278183 52.022179 46.268021 52.081707 46.207062 c
116.38328 -6.796453 217.81129 -6.9488497 287.86737 33.862942 c
316.18347 50.352249 335.76862 75.904068 342.09857 104.04663 c
331.88928 114.49088 317.56256 121.50111 304.58517 127.04835 c
264.33347 144.23868 217.73192 147.73364 174.65256 147.13422 c
164.67146 146.99197 154.48204 146.41287 144.26283 145.33594 c
144.26283 117.26449 150.88051 90.188705 169.36436 69.472931 c
171.2197 67.390182 164.50281 67.92865 163.13364 69.462776 c
144.84821 89.965187 137.96266 116.69554 137.59555 144.48251 c
123.62601 142.6944 109.68623 139.97157 96.222687 135.86702 c
96.937042 106.73897 105.09255 78.718323 125.6004 57.088177 c
127.04895 55.55405 120.66939 56.346512 119.53833 57.555527 c
99.625778 78.565926 91.103165 105.48932 89.724075 133.62172 c
76.627625 129.14127 64.007408 123.51275 52.458725 116.15707 c
52.458725 116.15707 l
h
116.8912 233.97374 m
116.77292 233.9433 116.63492 233.89253 116.49692 233.86208 c
116.58563 233.70981 116.64478 233.54739 116.58563 233.40527 c
105.14137 206.14912 96.279694 172.84283 96.190979 140.5415 c
110.33614 144.09445 124.52071 146.40894 137.414 148.21587 c
137.67029 180.49689 146.36438 213.87424 156.31035 240.36905 c
142.58905 239.24225 129.28177 237.06989 116.8912 233.97374 c
116.8912 233.97374 l
h
324.99023 178.9966 m
288.98846 227.01079 222.95218 243.27545 163.43909 239.95366 c
163.74687 239.58907 163.93552 239.20422 163.78659 238.80925 c
153.83795 212.87288 144.96162 180.18152 144.28647 148.46237 c
193.52328 154.64012 245.45079 150.32582 293.10892 136.68417 c
309.21341 132.07619 328.97168 124.82494 343.85489 113.13787 c
346.3371 134.94225 340.8465 157.83026 324.99023 178.9966 c
324.99023 178.9966 l
h
S
/Cs2 SC
0 0 0 sc
1 0 0 -1 0 216 cm
/F1.1[ 144 0 0 -144 0 0]sf
0 144 m
(!"#$#%&')[ 101.376000 80.064000 85.392000 69.408000 85.392000 34.560000 74.736000 0.000000 ] xS
578.73602 144 m
(\(\))[ 98.784000 0.000000 ] xS
1 0 0 -1 5 55 cm
/F1.1[ 40 0 0 -40 0 0]sf
0 40 m
(*+,-.#/-/012-,'+3&$+41/5-/)[ 29.640000 9.600000 17.040000 22.240000 22.240000 23.720000 11.120000 22.240000 11.120000 10.560000 22.240000 19.280000 22.240000 17.040000 13.280000 9.600000 24.440000 20.760000 19.280000 9.600000 23.720000 22.240000 11.120000 24.440000 22.240000 0.000000 ] xS
0.64705884 0.54509807 0.37254903 sc
472.16 40 m
(\()s
0 0 0 sc
499.60001 40 m
(,-6/-)[ 17.040000 22.240000 13.280000 11.120000 0.000000 ] xS
0.64705884 0.54509807 0.37254903 sc
585.52002 40 m
(\))s
0 0 0 sc
610.71997 40 m
(7-6+-1$-)[ 24.440000 22.240000 13.280000 9.600000 22.240000 22.240000 19.280000 0.000000 ] xS
2 w
2 J
/Cs1 SC
0.64705884 0.54509807 0.37254903 sc
1 0 0 -1 3 55 cm
0 1 m
768 1 l
S
ep
end
